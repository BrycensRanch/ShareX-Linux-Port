name: Build ShareX

on:
  push:
    branches:
      - "**"
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
    paths-ignore:
      - "**/*.md"
      - "**/*.gitignore"
      - "**/*.gitattributes"

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        configuration:
          - Release
          - Debug
        platform:
          - Any CPU

    env:
      SOLUTION_FILE_PATH: ShareX.sln
      ASSEMBLY_INFO_PATH: Directory.build.props

    outputs:
      APP_VERSION: ${{ env.APP_VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Set APP_VERSION
        run: |
          $content = Get-Content "${{ env.ASSEMBLY_INFO_PATH }}" -Raw
          $pattern = '<Version>([0-9]+(?:\.[0-9]+){1,3})</Version>'
          $match = [regex]::Match($content, $pattern)
          $version = $match.Groups[1].Value
          if ($env:GITHUB_REF -eq "refs/heads/develop") {
            $version = "$version.$env:GITHUB_RUN_NUMBER"
            $content = [regex]::Replace($content, $pattern, "<Version>$version</Version>")
            Set-Content -Path "${{ env.ASSEMBLY_INFO_PATH }}" -Value "$content" -NoNewline
          }
          echo $version
          echo "APP_VERSION=$version" >> $env:GITHUB_ENV

      - name: Restore NuGet packages
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        run: nuget restore "${{ env.SOLUTION_FILE_PATH }}" -Project2ProjectTimeOut 300

      - name: Build
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        run: dotnet build "${{ env.SOLUTION_FILE_PATH }}" -c "${{ matrix.configuration }}" -p:Platform="${{ matrix.platform }}" --no-restore

      - name: Upload artifact (Debug)
        if: matrix.configuration == 'Debug'
        uses: actions/upload-artifact@v4
        with:
          name: Debug
          path: Output\ShareX-${{ env.APP_VERSION }}-debug.zip
