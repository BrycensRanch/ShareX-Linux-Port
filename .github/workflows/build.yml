name: Build SnapX

on:
  push:
    branches:
      - "**"
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
    paths-ignore:
      - "**/*.md"
      - "**/*.gitignore"
      - "**/*.gitattributes"

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-24.04, macos-latest, macos-13, windows-latest ]
        configuration:
          - Release
          - Debug
        platform:
          - Any CPU

    env:
      SOLUTION_FILE_PATH: SnapX.sln
      ASSEMBLY_INFO_PATH: Directory.build.props

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json
      - name: Cache .NET NuGet packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.nuget/packages
            C:\Users\runner\.nuget\packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore --locked-mode
      # Needed for offline building :3
      - name: Upload Source With Dependencies
        if: matrix.configuration == 'Debug' && matrix.os == 'ubuntu-24.04'
        uses: actions/upload-artifact@v4
        with:
          name: SnapX-Vendored-Source
          path: .
          include-hidden-files: false
          compression-level: 9
      - name: Build
        run: dotnet build "${{ env.SOLUTION_FILE_PATH }}" -c "${{ matrix.configuration }}" -p:Platform="${{ matrix.platform }}" --no-restore

      - name: Publish
        run: dotnet publish "${{ env.SOLUTION_FILE_PATH }}" -c "${{ matrix.configuration }}" -p:Platform="${{ matrix.platform }}" --no-restore

      - name: Upload artifact (Debug)
        if: matrix.configuration == 'Debug'
        uses: actions/upload-artifact@v4
        with:
          name: Debug
          path: "**/publish"
